<?php

/**
 * @file
 * Generate summary out of xls file
 */

use Drupal\Core\Form\FormStateInterface;
use Symfony\Component\HttpFoundation\Request;
use Drupal\Core\Ajax\AjaxResponse;
use Drupal\Core\Ajax\InvokeCommand;
use Drupal\Core\Ajax\HtmlCommand;
use Drupal\field\Entity\FieldConfig;
use Drupal\summary_generator\CompaniesList;

/**
 * Implements hook_form_FORM_ID_alter().
 */
function summary_generator_form_node_form_alter(&$form, FormStateInterface $form_state) {
    $node = $form_state->getFormObject()->getEntity();
    $nodeBundle = $node->bundle();
    if (in_array($form['#form_id'], ['node_page_edit_form', 'node_page_form'])) {
      $form['generate_summary'] = [
        '#type' => 'submit',
        '#name' => 'generate_summary',
        '#value' => t('Generate Summary'),
        '#weight' => 11,
        '#ajax' => array(
            'callback' => 'summary_generator_generat_callback',
            'wrapper' => 'form-summary-generate-wrapper',
            'effect' => 'fade',
            'event' => 'click',
            'progress' => array(
              'type' => 'throbber',
              'message' => 'Please wait...',
          ),
        ),
      ];
      $form['#attached']['library'][] = 'summary_generator/summary_generator_libs';

      // hide body field and show only after button click (summary generation)
      if(isset($form['body'])) {
        if ($form['body']['widget'][0]['#default_value'] == '') {
          $form['body']['#attributes']['class'][] = 'hide-body--field';
          $form['body']['#attributes']['style'] = 'display:none;';
        }
      }

    }
  }

/**
 * Implements hook_field_widget_paragraphs_form_alter().
 * Choose 'paragraph experiemental' widget type to make this hook to be work
 */
  function summary_generator_field_widget_paragraphs_form_alter(&$element, FormStateInterface &$form_state, $context){
    $dynamic = \Drupal::config('summary_generator.settings')->get('summary_generator_dynamic');
    $field_definition = $context['items']->getFieldDefinition();
  
    switch ($element['#paragraph_type']) {
        case 'data_source':
          if ($dynamic) {
            // hide file field
            $element['subform']['field_data_source_file']['#attributes']['style'] = 'display:none;';
            $element['subform']['field_company_name']['widget'][0]['value']['#autocomplete_route_name'] = 'summary_generator.autocomplete.companies';
          }
    } 
}

  /**
  * Summary generator callback
  */
  function summary_generator_generat_callback(&$form, FormStateInterface $form_state) {
    $dynamic = \Drupal::config('summary_generator.settings')->get('summary_generator_dynamic');
    $api_url = \Drupal::config('summary_generator.settings')->get('summary_generator_api_url');

    # if dynamic get dynamic data
    # else static data
    
    $text = \Drupal::config('summary_generator.settings')->get('summary_generator_text');
    if ($dynamic) {
      $results = new CompaniesList();
      //dpr($form_state);exit;
      $old_entity = $form_state->getFormObject()->getEntity();
      $data_source = $old_entity->get('field_data_source')->getValue();
      $company_name = $data_source[0]['subform']['field_company_name'][0]['value'];
      $text = $results->getData($company_name, 'article');
    }
    
    $response = new AjaxResponse();
    $arguments = [$text, 'edit-body-0-value'];
    $response->addCommand(new InvokeCommand(Null, "update_text_editor", $arguments));
    $response->addCommand(new InvokeCommand('.hide-body--field', 'show'));
    return $response;
  }